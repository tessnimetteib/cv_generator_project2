# Generated by Django 5.2 on 2025-10-24 22:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RAGCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('query_text', models.TextField()),
                ('profession', models.CharField(blank=True, max_length=100)),
                ('cv_section', models.CharField(blank=True, max_length=100)),
                ('cached_results', models.JSONField(default=dict)),
                ('hit_count', models.IntegerField(default=0)),
                ('accessed_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'RAG Cache',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='CVDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('professional_headline', models.CharField(blank=True, max_length=200)),
                ('profession', models.CharField(choices=[('Accountant', 'Accountant'), ('Backend Developer', 'Backend Developer'), ('Frontend Developer', 'Frontend Developer'), ('Manager', 'Manager'), ('DevOps Engineer', 'DevOps Engineer'), ('Data Scientist', 'Data Scientist'), ('QA Engineer', 'QA Engineer'), ('Other', 'Other')], default='Other', max_length=100)),
                ('professional_summary', models.TextField(blank=True)),
                ('generated_summary', models.TextField(blank=True, default='')),
                ('generated_cv_content', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cv_document', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'CV Documents',
            },
        ),
        migrations.CreateModel(
            name='CVGenerationFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(max_length=100)),
                ('generated_content', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('feedback_text', models.TextField(blank=True)),
                ('was_helpful', models.BooleanField(default=True)),
                ('suggested_improvement', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cv_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='cv_gen.cvdocument')),
            ],
            options={
                'verbose_name_plural': 'CV Generation Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=300)),
                ('field_of_study', models.CharField(max_length=200)),
                ('degree', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('gpa', models.FloatField(blank=True, null=True)),
                ('honors', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('generated_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cv_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='cv_gen.cvdocument')),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=500)),
                ('content', models.TextField()),
                ('category', models.CharField(default='achievement', max_length=100)),
                ('profession', models.CharField(choices=[('Accountant', 'Accountant'), ('Backend Developer', 'Backend Developer'), ('Frontend Developer', 'Frontend Developer'), ('Manager', 'Manager'), ('DevOps Engineer', 'DevOps Engineer'), ('Data Scientist', 'Data Scientist'), ('QA Engineer', 'QA Engineer'), ('General', 'General')], db_index=True, default='General', max_length=50)),
                ('cv_section', models.CharField(choices=[('summary', 'Professional Summary'), ('achievement', 'Achievement/Accomplishment'), ('experience', 'Work Experience'), ('skill', 'Skill')], db_index=True, default='achievement', max_length=50)),
                ('content_type', models.CharField(choices=[('bullet', 'Bullet Point'), ('paragraph', 'Paragraph'), ('job_description', 'Job Description')], default='bullet', max_length=50)),
                ('role_type', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, db_index=True, max_length=100)),
                ('source_document', models.CharField(blank=True, max_length=500)),
                ('word_count', models.IntegerField(default=0)),
                ('embedding_vector', models.TextField(blank=True, help_text='JSON array of embedding vector')),
                ('confidence_score', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Knowledge Base',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['profession', 'cv_section'], name='cv_gen_know_profess_9fcbda_idx'), models.Index(fields=['cv_section', 'category'], name='cv_gen_know_cv_sect_15c5c7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=200)),
                ('proficiency_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('Expert', 'Expert')], default='Intermediate', max_length=50)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('years_of_experience', models.FloatField(blank=True, null=True)),
                ('generated_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cv_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='cv_gen.cvdocument')),
            ],
            options={
                'verbose_name_plural': 'Skills',
                'ordering': ['skill_name'],
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('job_description', models.TextField()),
                ('achievements', models.TextField(blank=True)),
                ('technologies', models.CharField(blank=True, max_length=500)),
                ('generated_bullets', models.TextField(blank=True)),
                ('generated_description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cv_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='cv_gen.cvdocument')),
            ],
            options={
                'verbose_name_plural': 'Work Experiences',
                'ordering': ['-start_date'],
            },
        ),
    ]
